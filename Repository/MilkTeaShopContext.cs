// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BussinessObject;
using Microsoft.EntityFrameworkCore;

namespace Repository;

public partial class MilkTeaShopContext : DbContext
{
    public MilkTeaShopContext(DbContextOptions<MilkTeaShopContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Combo> Combos { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderDetail> OrderDetails { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<Topping> Toppings { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.CartId).HasName("PK__Cart__51BCD79713A31908");

            entity.ToTable("Cart");

            entity.Property(e => e.CartId).HasColumnName("CartID");
            entity.Property(e => e.ComboId).HasColumnName("ComboID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.Topping1Id).HasColumnName("Topping1ID");
            entity.Property(e => e.Topping2Id).HasColumnName("Topping2ID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Combo).WithMany(p => p.Carts)
                .HasForeignKey(d => d.ComboId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Cart__ComboID__48CFD27E");

            entity.HasOne(d => d.Product).WithMany(p => p.Carts)
                .HasForeignKey(d => d.ProductId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Cart__ProductID__47DBAE45");

            entity.HasOne(d => d.Topping1).WithMany(p => p.CartTopping1s)
                .HasForeignKey(d => d.Topping1Id)
                .HasConstraintName("FK__Cart__Topping1ID__49C3F6B7");

            entity.HasOne(d => d.Topping2).WithMany(p => p.CartTopping2s)
                .HasForeignKey(d => d.Topping2Id)
                .HasConstraintName("FK__Cart__Topping2ID__4AB81AF0");

            entity.HasOne(d => d.User).WithMany(p => p.Carts)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Cart__UserID__46E78A0C");
        });

        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__Categori__19093A2B7EF939E7");

            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.CategoryName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Combo>(entity =>
        {
            entity.HasKey(e => e.ComboId).HasName("PK__Combos__DD42580EC71822B4");

            entity.Property(e => e.ComboId).HasColumnName("ComboID");
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");

            entity.HasMany(d => d.Products).WithMany(p => p.Combos)
                .UsingEntity<Dictionary<string, object>>(
                    "ComboDetail",
                    r => r.HasOne<Product>().WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ComboDeta__Produ__33D4B598"),
                    l => l.HasOne<Combo>().WithMany()
                        .HasForeignKey("ComboId")
                        .HasConstraintName("FK__ComboDeta__Combo__32E0915F"),
                    j =>
                    {
                        j.HasKey("ComboId", "ProductId").HasName("PK__ComboDet__1602946080BC2FC4");
                        j.ToTable("ComboDetails");
                        j.IndexerProperty<int>("ComboId").HasColumnName("ComboID");
                        j.IndexerProperty<int>("ProductId").HasColumnName("ProductID");
                    });

            entity.HasMany(d => d.Toppings).WithMany(p => p.Combos)
                .UsingEntity<Dictionary<string, object>>(
                    "ComboTopping",
                    r => r.HasOne<Topping>().WithMany()
                        .HasForeignKey("ToppingId")
                        .HasConstraintName("FK__ComboTopp__Toppi__37A5467C"),
                    l => l.HasOne<Combo>().WithMany()
                        .HasForeignKey("ComboId")
                        .HasConstraintName("FK__ComboTopp__Combo__36B12243"),
                    j =>
                    {
                        j.HasKey("ComboId", "ToppingId").HasName("PK__ComboTop__93A274C0D0D19058");
                        j.ToTable("ComboToppings");
                        j.IndexerProperty<int>("ComboId").HasColumnName("ComboID");
                        j.IndexerProperty<int>("ToppingId").HasColumnName("ToppingID");
                    });
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Orders__C3905BAF4895C9A9");

            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.OrderDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(10)
                .HasDefaultValue("Pending");
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.Orders)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Orders__UserID__3A81B327");
        });

        modelBuilder.Entity<OrderDetail>(entity =>
        {
            entity.HasKey(e => e.OrderDetailId).HasName("PK__OrderDet__D3B9D30CD26189EE");

            entity.Property(e => e.OrderDetailId).HasColumnName("OrderDetailID");
            entity.Property(e => e.ComboId).HasColumnName("ComboID");
            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.SubTotal).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Topping1Id).HasColumnName("Topping1ID");
            entity.Property(e => e.Topping2Id).HasColumnName("Topping2ID");

            entity.HasOne(d => d.Combo).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.ComboId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__OrderDeta__Combo__4222D4EF");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__OrderDeta__Order__403A8C7D");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.ProductId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__OrderDeta__Produ__412EB0B6");

            entity.HasOne(d => d.Topping1).WithMany(p => p.OrderDetailTopping1s)
                .HasForeignKey(d => d.Topping1Id)
                .HasConstraintName("FK__OrderDeta__Toppi__4316F928");

            entity.HasOne(d => d.Topping2).WithMany(p => p.OrderDetailTopping2s)
                .HasForeignKey(d => d.Topping2Id)
                .HasConstraintName("FK__OrderDeta__Toppi__440B1D61");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__Products__B40CC6EDCE597735");

            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Category).WithMany(p => p.Products)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Products__Catego__2A4B4B5E");
        });

        modelBuilder.Entity<Topping>(entity =>
        {
            entity.HasKey(e => e.ToppingId).HasName("PK__Toppings__EE02CCE54E5E7762");

            entity.Property(e => e.ToppingId).HasColumnName("ToppingID");
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCAC96B4CE75");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E439BAB887").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Role)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}